// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  password      String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Task          Task[]
  Comment       Comment[]
}

model Account {
  id                String  @id @default(cuid())
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  userId            String  @map("user_id")
  user              User    @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  expires      DateTime
  userId       String   @map("user_id")
  user         User     @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Project {
  id        String   @id @default(cuid())
  name      String
  startDate DateTime
  endDate   DateTime
  status    String   @default("Planuojama")
  createdAt DateTime @default(now())
  tasks     Task[]
}

model Task {
  id          String        @id @default(cuid())
  projectId   String
  userId      String
  name        String
  description String?
  startDate   DateTime
  endDate     DateTime
  status      String        @default("Laukia")
  priority    String        @default("Zemas")
  createdAt   DateTime      @default(now())
  project     Project       @relation(fields: [projectId], references: [id])
  user        User          @relation(fields: [userId], references: [id])
  comments    Comment[]
  histories   TaskHistory[]
}

model Comment {
  id        String   @id @default(cuid())
  taskId    String
  userId    String
  text      String
  createdAt DateTime @default(now())
  task      Task     @relation(fields: [taskId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model TaskHistory {
  id         String   @id @default(cuid())
  taskId     String
  status     String   @default("Laukia")
  changeTime DateTime @default(now())
  task       Task     @relation(fields: [taskId], references: [id])
}
